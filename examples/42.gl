(define get_ultimo_algarismo (lambda (valor)
			      (begin
			       (define ultimos_dois (% valor 100))
			       (define primeiro_valor (intPart(/ ultimos_dois 10)))
			       (define segundo_valor (% ultimos_dois 10))
			       (* primeiro_valor segundo_valor)
			      )
			     )
)


(define or (lambda (a b)( if a true (if b true false))))


(define divisivel (lambda (valor por) (= 0 (% valor por))))

(define calculate (lambda (m passos passos_minimos ramo)

                          (if (> passos passos_minimos) max_number
                            (

                             if (= m 42) passos

                             (
                              if (< m 42 ) max_number

                              (begin

                                (define regra_um ( if (divisivel m 2) ( calculate (intPart (/ m 2)) (+ 1 passos) max_number 1) max_number ))


                                (define regra_tres ( if (divisivel m 5) (calculate (- m 42) (+ 1 passos) regra_um 2) max_number ))

                                (define regra_dois (if (or (divisivel m 3) (divisivel m 4))
                                                     (begin
                                                       (define algs (get_ultimo_algarismo m))

                                                       (
                                                        if (= algs 0) max_number ( calculate (- m algs) (+ 1 passos) regra_tres 3)
                                                        )

                                                       )
                                                     max_number))

                                (min regra_um regra_dois regra_tres)


                                )

                              )


                             )

                            )
                          )
)

(print "Input a number:")
(define entrada (inputNumber))

(define result (calculate entrada 0 max_number 0))

;teste
(if (< result max_number) (print (intPart result)) (print (quote BAD_LUCK)))
